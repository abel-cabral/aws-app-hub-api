name: Build Project

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # Configuração do Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Instalar dependências do projeto
      - name: Instalar dependências
        run: npm ci

      # Rodar o build do projeto
      - name: Rodar build
        run: npm run build

      # Obter versão do package.json
      - name: Obter versão do package.json
        id: obter_versao
        run: |
          echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      # Verificar se a versão já está publicada
      - name: Verificar se a versão já está publicada
        id: verificar_versao
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "A versão ${{ env.VERSION }} já está publicada."
            exit 1
          fi

      # Compactar arquivos dentro da pasta build
      - name: Compactar arquivos da build
        working-directory: ./build
        run: zip -r "../v${{ env.VERSION }}.zip" ./*

      # Anexar o zip aos artefatos da ação (atualizado para v4)
      - name: Upload do arquivo zip como artefato
        uses: actions/upload-artifact@v4
        with:
          name: "v${{ env.VERSION }}.zip"
          path: "./v${{ env.VERSION }}.zip"

      # Criar e subir tag da versão
      - name: Criar e subir tag
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"